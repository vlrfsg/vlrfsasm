[wp/vv.vlra
 Copyright 2021 vlrfsg]

[Version]
{h.majorImageVersion; ; 1}
{h.minorImageVersion; ; 6}

[Subsystem]
{h.subsystem; ; 3} [IMAGE_SUBSYSTEM_WINDOWS_CUI]

[idata]
{is.funcList; ;
  ('
    (is.dll "kernel32.dll")
    (is.func "ExitProcess")
    (is.func "GetProcessHeap")
    (is.func "HeapAlloc")
    (is.func "HeapFree")
    (is.func "CreateFileW")
    (is.func "ReadFile")
    (is.func "WriteFile")
    (is.func "CloseHandle")
    (is.func "GetFileSize")
    (is.func "GetCommandLineW")
    (is.func "GetLocalTime")
    (is.func "GetStdHandle")
    (is.func "WriteConsoleW")
  )
}
{is.stringResource; ;
  ('
    (sr.contentOfCommandList)
    (sr.contentOfErrorFileName)
    (sr.contentOfNumberList)
    (sr.contentOfAppName)
  )
}
{sr.elementOfInternalCommandList A; ;
  ('
    (ib 0)
    (ib 1)
    (ib 0)
    (iw (- A (` @sr.addressOfCommandList)))
  )
}
{sr.elementOfCommandList A B C; ;
  ('
    (ib A)
    (ib 0)
    (ib C)
    (iw (- B (` @sr.addressOfCommandList)))
  )
}
{sr.elementOfExCommandList A B C D; ;
  ('
    (ib A)
    (ib (- B C))
    (ib D)
    (iw (- C (` @sr.addressOfCommandList)))
  )
}
{sr.sizeOfElementOfCommandList; ; $5}
{sr.contentOfCommandList; ;
  ('
    (@ @sr.addressOfCommandList)
    (sr.elementOfInternalCommandList (` @tf.addressOfCmdRet))
    (sr.elementOfInternalCommandList (` @tf.addressOfCmdThn))
    (sr.elementOfInternalCommandList (` @tf.addressOfCmdEls))
    (sr.elementOfCommandList "?" (` @tf.addressOfCmdIf) 3)
    (sr.elementOfCommandList "'" (` @tf.addressOfCmdCct) 0)
    (sr.elementOfExCommandList "+" (` @tf.addressOfCmdAdd) (` @tf.addressOfCmdBase) 0)
    (sr.elementOfExCommandList "&" (` @tf.addressOfCmdAnd) (` @tf.addressOfCmdBase) 0)
    (sr.elementOfExCommandList "|" (` @tf.addressOfCmdIor) (` @tf.addressOfCmdBase) 0)
    (sr.elementOfExCommandList "^" (` @tf.addressOfCmdXor) (` @tf.addressOfCmdBase) 0)
    (sr.elementOfExCommandList ":" (` @tf.addressOfCmdRes) (` @tf.addressOfCmdBase) 2)
    (sr.elementOfCommandList "!" (` @tf.addressOfCmdNot) 1)
    (sr.elementOfCommandList "<" (` @tf.addressOfCmdShl) 2)
    (sr.elementOfCommandList ">" (` @tf.addressOfCmdShr) 2)
    (sr.elementOfCommandList "," (` @tf.addressOfCmdGtr) 3)
    (sr.elementOfCommandList "#" (` @tf.addressOfCmdGts) 1)
    (sr.elementOfCommandList "@" (` @tf.addressOfCmdLbl) 1)
    (sr.elementOfCommandList "`" (` @tf.addressOfCmdAdr) 1)
    (sr.elementOfCommandList "~" (` @tf.addressOfCmdErr) 1)
    (iw 0)
  )
}
{sr.contentOfErrorFileName; ;
  (' (@ @sr.addressOfErrorFileName) (c.changeEndianSx "error.txt"))
}
{sr.elementOfNumberList A B; ; (' (ib A) (ib B))}
{sr.sizeOfElementOfNumberList; ; $2}
{sr.contentOfNumberList; ;
  (@ @sr.addressOfNumberList)
  (sr.elementOfNumberList "0" 0)
  (sr.elementOfNumberList "1" 1)
  (sr.elementOfNumberList "2" 2)
  (sr.elementOfNumberList "3" 3)
  (sr.elementOfNumberList "4" 4)
  (sr.elementOfNumberList "5" 5)
  (sr.elementOfNumberList "6" 6)
  (sr.elementOfNumberList "7" 7)
  (sr.elementOfNumberList "8" 8)
  (sr.elementOfNumberList "9" 9)
  (sr.elementOfNumberList "A" 10)
  (sr.elementOfNumberList "B" 11)
  (sr.elementOfNumberList "C" 12)
  (sr.elementOfNumberList "D" 13)
  (sr.elementOfNumberList "E" 14)
  (sr.elementOfNumberList "F" 15)
  (sr.elementOfNumberList "a" 10)
  (sr.elementOfNumberList "b" 11)
  (sr.elementOfNumberList "c" 12)
  (sr.elementOfNumberList "d" 13)
  (sr.elementOfNumberList "e" 14)
  (sr.elementOfNumberList "f" 15)
  (iw 0)
}
{sr.contentOfAppName; ;
  ('
    (@ @sr.addressOfAppName)
    (c.changeEndianSx
      ('
        "Vlrfsasm v"
        (c.convertISb (h.majorImageVersion) 10)
        "."
        (c.convertISb (h.minorImageVersion) 10)
        " "
      )
    )
  )
}

[Stack]
{h.sizeOfStack; ; $10000}

[Heap]
{hm.addressOfTempInteger; ; $0008}
{hm.addressOfEndOfLiteral; ; $0010}
{hm.addressOfEndOfDef; ; $0018}
{hm.addressOfEndOfToken; ; $0020}
{hm.addressOfCountOfLabelValue; ; $0028} [4:Current, 4:Previous]
{hm.addressOfBaseOfStack; ; $0030}
{hm.addressOfStartOfResultFunc; ; $0038}
{hm.addressOfEndOfEmptyValueList; ; $0040} [2*11+9]
{hm.addressOfStepCount; ; $0060}
{hm.addressOfFuncData; ; $0200} [4:Address, 2:NumberOfArgument, 2:NumberOfLocalLabel, 8:AddressOfFuncToken, 2:Line, 2:File]
{hm.addressOfArgumentList; ; $0220} [2:Token]
{hm.addressOfLocalLabelList; ; $02C0}
{hm.addressOfTextFileList; ; $0300}
{hm.sizeOfElementOfTextFileList; ; $8}
{hm.addressOfTempStruct; ; $0400}
{hm.addressOfErrorMessage; ; $2000}
{hm.sizeOfErrorMessage; ; $2000}
{hm.logOfElementOfErrorMessage; ; 7}
{hm.sizeOfElementOfErrorMessage; ; (< 1 (hm.logOfElementOfErrorMessage))}
{hm.addressOfCommandLine; ; (+ (hm.addressOfErrorMessage) (hm.sizeOfErrorMessage))}
{hm.sizeOfCommandLine; ; $4000}
{hm.sizeOfElementOfCommandLine; ; $200}
{hm.addressOfDestFileName; ; (+ (hm.addressOfCommandLine) (hm.sizeOfElementOfCommandLine))}
{hm.addressOfLogFileName; ; (+ (hm.addressOfDestFileName) (hm.sizeOfElementOfCommandLine))}
{hm.addressOfSourceFileName; ; (+ (hm.addressOfLogFileName) (hm.sizeOfElementOfCommandLine))}
{hm.addressOfLabelValue; ; (+ (hm.addressOfCommandLine) (hm.sizeOfCommandLine))}
{hm.sizeOfLabelValue; ; $4000}
{hm.sizeOfElementOfLabelValue; ; $4} [2:PrevValue, 2:NextValue]
{hm.addressOfStack; ; (+ (hm.addressOfLabelValue) (hm.sizeOfLabelValue))}
{hm.sizeOfStack; ; $4000}
{hm.sizeOfElementOfStack; ; $A} [2:Line, 2:Func, 2:NumberOfArgument, 4:AddressOfThen/AddressOfElse]
{hm.sizeOfElementOfStackRun; ; $80} [4:Address, 2:Blank, 2:File, 4:AddressToReturnAt, 1:Condition, 3:Blank, 4:Count, 12:Blank, 4{2:Value, 2:Remain}*16:Argument, 2*16:LocalLabel]
{hm.addressOfInputFile; ; (+ (hm.addressOfStack) (hm.sizeOfStack))}
{hm.sizeOfInputFile; ; $70000}
{hm.addressOfToken; ; (+ (hm.addressOfInputFile) (hm.sizeOfInputFile))}
{hm.sizeOfToken; ; $80000}
{hm.logOfElementOfToken; ; 4}
{hm.sizeOfElementOfToken; ; (< 1 (hm.logOfElementOfToken))} [1:Type{0:Number, 1:String, 2:Function/SideEffectFunction/BuiltinFunction/RawBinary, 3:Argument&LocalLabel, 4:GlobalLabel, 5:InternalFunction}, 1:TypeExtension, {(2:LengthOfDefinition, 4:Definition):other, (3:Length, 3:Def):Raw}, 2:Length, 2:Hash, 4:Str]
{hm.addressOfInputText; ; (+ (hm.addressOfToken) (hm.sizeOfToken))}
{hm.sizeOfInputText; ; $100000}
{hm.addressOfDef; ; (+ (hm.addressOfInputText) (hm.sizeOfInputText))}
{hm.sizeOfDef; ; $100000}
{hm.sizeOfFuncHeader; ; $48} [2:File, 2:NumberOfArgument, 2:NumberOfLocalLabel, 2:Blank, 4*16:Size]
{hm.sizeOfElementOfDef; ; $6} [2:Token, 2:NumberOfArgument, 2:Line]
{hm.addressOfLabelList; ; (+ (hm.addressOfDef) (hm.sizeOfDef))}
{hm.sizeOfLabelList; ; $80000}
{hm.sizeOfElementOfLabelList; ; $8} [2:Next{FFFE:Empty, FFFF:End}, 2:Token, 4:Position{31:Position, 1:Global/Local}]
{hm.addressOfTempString; ; (+ (hm.addressOfLabelList) (hm.sizeOfLabelList))}
{hm.sizeOfTempString; ; $40000}
{hm.sizeOfElementOfTempString; ; $20000}
{hm.addressOfValue; ; (+ (hm.addressOfTempString) (hm.sizeOfTempString))}
{hm.sizeOfValue; ; $20EE000}
{hm.sizeOfValueSmall; ; $FFE000}
{hm.addressOfValueIndex; ; (+ (hm.addressOfValue) (hm.sizeOfValue))}
{hm.sizeOfValueIndex; ; $16120}
{hm.sizeOfElementOfValueIndex; ; $8} [4:Size{-1:LocalLabel, -2:GlobalLabel}, 2:Count, 2:LabelList{FFFF:None}]
{hm.addressOfEmptyValueList; ; (+ (hm.addressOfValueIndex) (hm.sizeOfValueIndex))}
{hm.sizeOfEmptyValueList; ; $5848}
{hm.sizeOfElementOfEmptyValueList; ; $2}
{hm.addressOfValueStack; ; (+ (hm.addressOfEmptyValueList) (hm.sizeOfEmptyValueList))}
{hm.sizeOfValueStack; ; $6698}
{hm.sizeOfElementOfValueStack; ; $2}
{hm.addressOfLiteral; ; (+ (hm.addressOfValueStack) (hm.sizeOfValueStack))}
{hm.sizeOfLiteral; ; $1E0000}
{h.sizeOfHeap; ; (+ (hm.addressOfLiteral) (hm.sizeOfLiteral))}

[Text]

{ts.contentOfText; ;
  ('
    (@ @ts.entryPoint)
    (tf.contentOfInitMemory)
    (tf.contentOfLoadErrorFile)
    (tf.contentOfParseErrorFile)
    (tf.contentOfCopyBuiltinFunc)
    (tf.contentOfParseCommandLine)
    (tf.contentOfLoadSourceFile)
    (tf.contentOfParseSourceFile)
    (tf.contentOfRun)
    (tf.contentOfWriteDestFile)
    (tf.contentOfPrintError)
    (tf.contentOfExit)
    (tf.contentOfReadFile)
    (tf.contentOfWriteFile)
    (tf.contentOfCopyError)
    (tf.contentOfConvertIS)
    (tf.contentOfConvertSI)
    (tf.contentOfConvert8X)
    (tf.contentOfConvertX8)
    (tf.contentOfCopyX)
    (tf.contentOfNewLine)
    (tf.contentOfGetNextCondition)
    (tf.contentOfSearchI)
    (tf.contentOfSearchX)
    (tf.contentOfGetTokenId)
    (tf.contentOfAddDef)
    (tf.contentOfCheckIf)
    (tf.contentOfGetTokenAddress)
    (tf.contentOfConvertLS)
    (tf.contentOfCopyC)
    (tf.contentOfGetTokenName)
    (tf.contentOfAllocValue)
    (tf.contentOfFreeValue)
    (tf.contentOfGetValueAddress)
    (tf.contentOfLogSize)
    (tf.contentOfConvertKS)
    (tf.contentOfPushValue)
    (tf.contentOfPopValue)
    (tf.contentOfPopLabel)
    (tf.contentOfPop16)
    (tf.contentOfCmdRet)
    (tf.contentOfCmdIf)
    (tf.contentOfCmdCct)
    (tf.contentOfCmdAdd)
    (tf.contentOfCmdAnd)
    (tf.contentOfCmdIor)
    (tf.contentOfCmdXor)
    (tf.contentOfCmdRes)
    (tf.contentOfCmdBase)
    (tf.contentOfCmdNot)
    (tf.contentOfCmdShl)
    (tf.contentOfCmdShr)
    (tf.contentOfCmdGts)
    (tf.contentOfCmdLbl)
    (tf.contentOfCmdAdr)
    (tf.contentOfCmdErr)
    (tf.contentOfCmdGtr)
  )
}

[Resource]

{rs.exist; ; 0}

