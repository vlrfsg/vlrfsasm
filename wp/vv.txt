[wp/vv.txt
 Copyright 2021 vlrfsg]

[Version]
{h.majorImageVersion; ; 0}
{h.minorImageVersion; ; 2}

[idata]
{is.funcList; ;
  ('
    (is.dll "kernel32.dll")
    (is.func "ExitProcess")
    (is.func "GetProcessHeap")
    (is.func "HeapAlloc")
    (is.func "HeapFree")
    (is.func "CreateFileW")
    (is.func "ReadFile")
    (is.func "WriteFile")
    (is.func "CloseHandle")
    (is.func "GetFileSize")
    (is.func "GetCommandLineW")
    (is.func "GetLocalTime")
    (is.dll "user32.dll")
    (is.func "MessageBoxW")
  )
}
{is.stringResource; ;
  ('
    (sr.contentOfCommandList)
    (sr.contentOfErrorList)
  )
}
{sr.contentOfCommandList; ;
  (`
    (@ @sr.addressOFCommandList)
    (sr.elementOfCommandList "'" (` @tf.cct))
    (sr.elementOfCommandList "+" (` @tf.add))
    (sr.elementOfCommandList "&" (` @tf.and))
    (sr.elementOfCommandList "|" (` @tf.ior))
    (sr.elementOfCommandList "^" (` @tf.xor))
    (sr.elementOfCommandList "?" (` @tf.if))
    (sr.elementOfCommandList "!" (` @tf.not))
    (sr.elementOfCommandList "<" (` @tf.shl))
    (sr.elementOfCommandList ">" (` @tf.shr))
    (sr.elementOfCommandList "*" (` @tf.mul))
    (sr.elementOfCommandList "/" (` @tf.div))
    (sr.elementOfCommandList "%" (` @tf.mod))
    (sr.elementOfCommandList ":" (` @tf.res))
    (sr.elementOfCommandList "#" (` @tf.gts))
    (sr.elementOfCommandList "@" (` @tf.lbl))
    (sr.elementOfCommandList "`" (` @tf.adr))
    (sr.elementOfCommandList ";" (` @tf.err))
  )
}

[Stack]
{h.sizeOfStack; ; $10000}

[Heap]
{hm.addressOfCommandLine; ; $200}
{hm.sizeOfCommandLine; ; $7E00}
{hm.sizeOfElementOfCommandLine; ; $200}
{hm.addressOfDestFileName; ; (+ (hm.addressOfCommandLine) (hm.sizeOfElementOfCommandLine))}
{hm.addressOfSourceFileName; ; (+ (hm.addressOfDestFileName) (hm.sizeOfElementOfCommandLine))}
{hm.addressOfLabelValue; ; (+ (hm.addressOfCommandLine) (hm.sizeOfCommandLine))}
{hm.sizeOfLabelValue; ; $4000}
{hm.sizeOfElementOfLabelValue; ; $4} [2:Value, 2:Step]
{hm.addressOfStack; ; (+ (hm.addressOfLabelValue) (hm.sizeOfLabelValue))}
{hm.sizeOfStack; ; $4000}
{hm.sizeOfElementOfStack; ; $2}
{hm.addressOfInputFile; ; (+ (hm.addressOfStack) (hm.sizeOfStack))}
{hm.sizeOfInputFile; ; $10000}
{hm.addressOfDestFile; ; (+ (hm.addressOfInputFile) (hm.sizeOfInputFile))}
{hm.sizeOfDestFile; ; $10000}
{hm.addressOfLiteral; ; (+ (hm.addressOfDestFile) (hm.sizeOfDestFile))}
{hm.sizeOfLiteral; ; $50000}
{hm.addressOfToken; ; (+ (hm.addressOfDestFile) (hm.sizeOfDestFile))}
{hm.sizeOfToken; ; $80000}
{hm.sizeOfElementOfToken; ; $C} [2:Type, 2:Definition 2:Length, 2:Hash, 4:Str]
{hm.addressOfInputText; ; (+ (hm.addressOfToken) (hm.sizeOfToken))}
{hm.sizeOfInputText; ; $100000}
{hm.addressOfDef; ; (+ (hm.addressOfInputText) (hm.sizeOfInputText))}
{hm.sizeOfDef; ; $100000}
{hm.sizeOfElementOfDef; ; $2}
{hm.addressOfValueIndex; ; (+ (hm.addressOfDef) (hm.sizeOfDef))}
{hm.sizeOfValueIndex; ; $80000}
{hm.sizeOfElementOfValueIndex; ; $8} [4:Size. 2:LabelListId]
{hm.addressOfValue; ; (+ (hm.addressOfValueIndex) (hm.sizeOfValueIndex))}
{hm.sizeOfValue; ; $380000}
{hm.addressOfValueStack; ; (+ (hm.addressOfValue) (hm.sizeOfValue))}
{hm.sizeOfValueStack; ; $20000}
{hm.sizeOfElementOfValueStack; ; $2}
{hm.addressOfLabelList; ; (+ (hm.addressOfValueStack) (hm.sizeOfValueStack))}
{hm.sizeOfLabelList; ; $20000}
{hm.sizeOfElementOfLabelList; ; $8} [2:Next, 4:Position]
{h.sizeOfHeap; ; (+ (hm.addressOfLabelList) (hm.sizeOfLabelList))}

[]
