[wp/vv.txt
 Copyright 2021 vlrfsg]

[Version]
{h.majorImageVersion; ; 0}
{h.minorImageVersion; ; 2}

[Subsystem]
{h.subsystem; ; 3} [IMAGE_SUBSYSTEM_WINDOWS_CUI]

[idata]
{is.funcList; ;
  ('
    (is.dll "kernel32.dll")
    (is.func "ExitProcess")
    (is.func "GetProcessHeap")
    (is.func "HeapAlloc")
    (is.func "HeapFree")
    (is.func "CreateFileW")
    (is.func "ReadFile")
    (is.func "WriteFile")
    (is.func "CloseHandle")
    (is.func "GetFileSize")
    (is.func "GetCommandLineW")
    (is.func "GetLocalTime")
    (is.func "GetStdHandle")
    (is.func "WriteConsoleW")
  )
}
{is.stringResource; ;
  ('
    (sr.contentOfCommandList)
    (sr.contentOfErrorFileName)
    (sr.contentOfNumberList)
    (sr.contentOfAppName)
  )
}
{sr.elementOfCommandList A B; ;
  ('
    (ib B)
    (ib A)
    (iw (- C (` @sr.addressOfCommandList)))
  )
}
{sr.sizeOfElementOfCommandList; ; $4}
{sr.contentOfCommandList; ;
  (`
    (@ @sr.addressOfCommandList)
    (sr.elementOfCommandList 0 5 (` @tf.addressOfCmdRet))
    (sr.elementOfCommandList 0 5 (` @tf.addressOfCmdThn))
    (sr.elementOfCommandList 0 5 (` @tf.addressOfCmdEls))
    (sr.elementOfCommandList "?" 2 (` @tf.addressOfCmdIf))
    (sr.elementOfCommandList "'" 2 (` @tf.addressOfCmdCct))
    (sr.elementOfCommandList "+" 2 (` @tf.addressOfCmdAdd))
    (sr.elementOfCommandList "&" 2 (` @tf.addressOfCmdSub))
    (sr.elementOfCommandList "|" 2 (` @tf.addressOfCmdIor))
    (sr.elementOfCommandList "^" 2 (` @tf.addressOfCmdXor))
    (sr.elementOfCommandList "!" 2 (` @tf.addressOfCmdNot))
    (sr.elementOfCommandList "<" 2 (` @tf.addressOfCmdShl))
    (sr.elementOfCommandList ">" 2 (` @tf.addressOfCmdShr))
    (sr.elementOfCommandList "*" 2 (` @tf.addressOfCmdMul))
    (sr.elementOfCommandList "/" 2 (` @tf.addressOfCmdDiv))
    (sr.elementOfCommandList "%" 2 (` @tf.addressOfCmdMod))
    (sr.elementOfCommandList ":" 2 (` @tf.addressOfCmdRes))
    (sr.elementOfCommandList "#" 2 (` @tf.addressOfCmdGts))
    (sr.elementOfCommandList "@" 2 (` @tf.addressOfCmdLbl))
    (sr.elementOfCommandList "`" 2 (` @tf.addressOfCmdAdr))
    (sr.elementOfCommandList ";" 2 (` @tf.addressOfCmdErr))
    (iw 0)
  )
}
{sr.contentOfErrorFileName; ; (c.chgEdnSxL "error.txt")}
{sr.elementOfNumberList A B; (' (ib A) (ib B))}
{sr.sizeOfElementOfNumberList; ; $2}
{sr.contentOfNumberList; ;
  (@ @sr.addressOfNumberList)
  (sr.elementOfNumberList "0" 0)
  (sr.elementOfNumberList "1" 1)
  (sr.elementOfNumberList "2" 2)
  (sr.elementOfNumberList "3" 3)
  (sr.elementOfNumberList "4" 4)
  (sr.elementOfNumberList "5" 5)
  (sr.elementOfNumberList "6" 6)
  (sr.elementOfNumberList "7" 7)
  (sr.elementOfNumberList "8" 8)
  (sr.elementOfNumberList "9" 9)
  (sr.elementOfNumberList "A" 10)
  (sr.elementOfNumberList "B" 11)
  (sr.elementOfNumberList "C" 12)
  (sr.elementOfNumberList "D" 13)
  (sr.elementOfNumberList "E" 14)
  (sr.elementOfNumberList "F" 15)
  (sr.elementOfNumberList "a" 10)
  (sr.elementOfNumberList "b" 11)
  (sr.elementOfNumberList "c" 12)
  (sr.elementOfNumberList "d" 13)
  (sr.elementOfNumberList "e" 14)
  (sr.elementOfNumberList "f" 15)
  (iw 0)
}
{sr.contentOfAppName; ;
  ('
    (@ @sr.addressOfAppName)
    (c.chgEdnSxL
      ('
        "Vlrfsasm v"
        (c.cnvIS (h.majorImageVersion))
        "."
        (c.cnvIS (h.minorImageVersion))
        " "
      )
    )
  )
}

[Stack]
{h.sizeOfStack; ; $10000}

[Heap]
{hm.addressOfTempInteger; ; $0008}
{hm.addressOfEndOfLiteral; ; $0010}
{hm.addressOfEndOfToken; ; $0018}
{hm.addressOfEndOfDef; ; $0020}
{hm.addressOfFuncData; ; $0200} [4:Address, 2:NumberOfArgument, 2:NumberOfLocalLabel]
{hm.addressOfArgumentList; ; $0210} [2:Token, 2:Size]
{hm.addressOfLocalLabelList; ; $02C0}
{hm.addressOfListOfTextFile; ; $0300}
{hm.sizeOfElementOfListOfTextFile; ; $8}
{hm.addressOfTempStruct; ; $0400}
{hm.addressOfErrorMessage; ; $2000}
{hm.sizeOfErrorMessage; ; $2000}
{hm.logOfElementOfErrorMessage; ; 7}
{hm.sizeOfElementOfErrorMessage; ; (< 1 hm.logOfElementOfErrorMessage)}
{hm.addressOfCommandLine; ; (+ (hm.addressOfErrorMessage) (hm.sizeOfErrorMessage))}
{hm.sizeOfCommandLine; ; $4000}
{hm.sizeOfElementOfCommandLine; ; $200}
{hm.addressOfDestFileName; ; (+ (hm.addressOfCommandLine) (hm.sizeOfElementOfCommandLine))}
{hm.addressOfSourceFileName; ; (+ (hm.addressOfDestFileName) (hm.sizeOfElementOfCommandLine))}
{hm.addressOfLabelValue; ; (+ (hm.addressOfCommandLine) (hm.sizeOfCommandLine))}
{hm.sizeOfLabelValue; ; $4000}
{hm.sizeOfElementOfLabelValue; ; $4} [2:Value, 2:Step]
{hm.addressOfStack; ; (+ (hm.addressOfLabelValue) (hm.sizeOfLabelValue))}
{hm.sizeOfStack; ; $4000}
{hm.sizeOfElementOfStack; ; $8} [2:Line, 2:Func, 2:NumberOfArgument]
{hm.addressOfInputFile; ; (+ (hm.addressOfStack) (hm.sizeOfStack))}
{hm.sizeOfInputFile; ; $10000}
{hm.addressOfDestFile; ; (+ (hm.addressOfInputFile) (hm.sizeOfInputFile))}
{hm.sizeOfDestFile; ; $10000}
{hm.addressOfLiteral; ; (+ (hm.addressOfDestFile) (hm.sizeOfDestFile))}
{hm.sizeOfLiteral; ; $50000}
{hm.addressOfToken; ; (+ (hm.addressOfDestFile) (hm.sizeOfDestFile))}
{hm.sizeOfToken; ; $80000}
{hm.logOfElementOfToken; ; 4}
{hm.sizeOfElementOfToken; ; (< 1 (hm.logOfElementOfToken))} [1:Type{0:Number, 1:String, 2:Function/LoopFunction/BuiltinFunction/RawBinary, 3:Argument&LocalLabel, 4:GlobalLabel, 5:InternalFunction}, 1:TypeExtension, 2:LengthOfDefinition, 4:Definition, 2:Length, 2:Hash, 4:Str]
{hm.addressOfInputText; ; (+ (hm.addressOfToken) (hm.sizeOfToken))}
{hm.sizeOfInputText; ; $100000}
{hm.addressOfDef; ; (+ (hm.addressOfInputText) (hm.sizeOfInputText))}
{hm.sizeOfDef; ; $100000}
{hm.sizeOfFuncHeader; ; $6} [2:File, 2:NumberOfArgument, 2:NumberOfLocalLabel]
{hm.sizeOfElementOfDef; ; $6} [2:Token, 2:NumberOfArgument, 2:Line]
{hm.addressOfValueIndex; ; (+ (hm.addressOfDef) (hm.sizeOfDef))}
{hm.sizeOfValueIndex; ; $80000}
{hm.sizeOfElementOfValueIndex; ; $8} [4:Size. 2:LabelListId]
{hm.addressOfValue; ; (+ (hm.addressOfValueIndex) (hm.sizeOfValueIndex))}
{hm.sizeOfValue; ; $380000}
{hm.addressOfValueStack; ; (+ (hm.addressOfValue) (hm.sizeOfValue))}
{hm.sizeOfValueStack; ; $20000}
{hm.sizeOfElementOfValueStack; ; $2}
{hm.addressOfLabelList; ; (+ (hm.addressOfValueStack) (hm.sizeOfValueStack))}
{hm.sizeOfLabelList; ; $20000}
{hm.sizeOfElementOfLabelList; ; $8} [2:Next, 4:Position]
{hm.addressOfTempString; ; (+ (hm.addressOfLabelList) (hm.sizeOfLabelList))}
{hm.sizeOfTempString; ; $20000}
{hm.sizeOfElementOfTempString; ; $10000}
{h.sizeOfHeap; ; (+ (hm.addressOfTempString) (hm.sizeOfTempString))}

[Text]

{ts.contentOfText; ;
  ('
    (@ @ts.entryPoint)
    (tf.contentOfInitMemory)
    (tf.contentOfLoadErrorFile)
    (tf.contentOfParseErrorFile)
    (tf.contentOfCopyBuiltinFunc)
    (tf.contentOfParseCommandLine)
    (tf.contentOfLoadSourceFile)
    (tf.contentOfParseSourceFile)
    (tf.contentOfPrintError)
    (tf.contentOfExit)
    (tf.contentOfReadFile)
    (tf.contentOfConvertIS)
    (tf.contentOfConvertSI)
    (tf.contentOfConvert8X)
    {tf.contentOfCopyX}
    {tf.contentOfNewLine}
    {tf.contentOfGetNextCondition}
    {tf.contentOfSearchI}
    {tf.contentOfSearchX}
    {tf.contentOfGetTokenId}
    {tf.contentOfAddDef}
    (tf.contentOfCmdCct)
    (tf.contentOfCmdAdd)
    (tf.contentOfCmdAnd)
    (tf.contentOfCmdIor)
    (tf.contentOfCmdXor)
    (tf.contentOfCmdIf)
    (tf.contentOfCmdNot)
    (tf.contentOfCmdShl)
    (tf.contentOfCmdShr)
    (tf.contentOfCmdMul)
    (tf.contentOfCmdDiv)
    (tf.contentOfCmdMod)
    (tf.contentOfCmdRes)
    (tf.contentOfCmdGts)
    (tf.contentOfCmdLbl)
    (tf.contentOfCmdAdr)
    (tf.contentOfCmdErr)
  )
}


