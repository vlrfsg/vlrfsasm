[def/common.txt
 Copyright 2021 vlrfsg]

[empty]
{c.emp; ; (: 0 0)}

[negate]
{c.neg A; ; (+ (! A) 1)}

[unsigned sub]
{- A B; ; (+ A (c.neg (: B (# A))))}

[get]
{c.getRan A B C; ; (: (> A (- B 1)) C)}
{c.getBit A B; ; (c.getRan A B 1)}
{c.getSgn A; ; (c.getBit A (- (# A) 1))}

[sign extend]
{:- A B; ;
  (?
    (|
      (! (c.getSgn A))
      (>= (# A) (: B 64))
    )
    (: A B)
    (' (! (: 0 (- (: B 64) (# A))) A)
  )
}

[signed add, sub]
{+- A B; ; (+ A (:- B (# A)))}
{-- A B; ; (- A (:- B (# A)))}

[unsigned compare]
{== A B; ; (: (? (^ A (: B (# A))) 1 0) 1)}
{!= A B; ; (^ (== A B) 1)}
{<! A B; ; (c.getSgn (- A B))}
{<= A B; ; (| (<! A B) (== A B))}
{>! A B; ; (! (<= A B))}
{>= A B; ; (! (<! A B))}

[signed compare]
{==- A B; ; (: (? (^ A (:- B (# A))) 1 0) 1)}
{!=- A B; ; (^ (==- A B) 1)}
{<!- A B; ; (c.getSgn (-- A B))}
{<=- A B; ; (| (<!- A B) (==- A B))}
{>!- A B; ; (! (<=- A B))}
{>=- A B; ; (! (<!- A B))}

[align]
{c.align A B; ; (? (& A (- B 1)) (+ (^ A (& A (- B 1))) B) A)}

[convert integer to string]
{c.cnvIC A; ;
  (? (<! A 10) (+ "0" A) (+ "A" (- A 10)))
}
{c.cnvISR A B; ;
  (?
    A
    (' (c.cnvISR (/ A B) B) (c.cnvIC (% A B)))
    (c.emp)
  )
}
{c.cnvIS A B; ; (? A (c.cnvISR A B) "0")}
{c.cnvIS- A B; ;
  (?
    (c.getSgn A)
    (' "-" (c.cnvIS (c.neg A) B))
    (c.cnvIS A B)
  )
}

[Convert utf-16 to utf-8]
{c.cnvCcS8 A; ;
  (?
    (>= $7F A)
    (: A 8)
    (?
      (>= $07FF A)
      ('
        (: %110 3) (c.getRan A 6 5)
        (: %10 2) (c.getRan A 0 6)
      )
      (?
        (>= $FFFF A)
        ('
          (: %1110 4) (c.getRan A 12 4)
          (: %10 2) (c.getRan A 6 6)
          (: %10 2) (c.getRan A 0 6)
        )
        ('
          (: %11110 5) (c.getRan A 18 3)
          (: %10 2) (c.getRan A 12 6)
          (: %10 2) (c.getRan A 6 6)
          (: %10 2) (c.getRan A 0 6)
        )
      )
    )
  )
}
{c.cnvSxS8 A; ;
  (?
    (== (# A) 16)
    (c.cnvCcS8 A)
    (?
      (== (# A) 32)
      (?
        (== (c.getRan A 26 6) %110110)
        (c.cnvCcS8 A)
        (' (c.cnvCcS8 (> A 16)) (c.cnvCcS8 (: A 16)))
      )
      (?
        (& (# A) $F)
        (; "Length of string in utf-16 must be multiple of 16.")
        (?
          (== (c.getRan A (+ (c.align (> (# A) 1) 16) 10) 6) %110110)
          ('
            (c.cnvSxS8 (> A (- (c.align (> (# A) 1) 16) 16)))
            (c.cnvSxS8 (: A (- (c.align (> (# A) 1) 16) 16)))
          )
          ('
            (c.cnvSxS8 (> A (c.align (> (# A) 1) 16)))
            (c.cnvSxS8 (: A (c.align (> (# A) 1) 16)))
          )
        )
      )
    )
  )
}


[about vlrfsasm]
{c.verI; ; $000200}
{c.verS; ;
  ('
    (c.cnvIS (c.getRan (c.verI) 16 8))
    "."
    (c.cnvIS (c.getRan (c.verI) 8 8))
    "."
    (c.cnvIS (c.getRan (c.verI) 0 8))
  )
}
{c.nam; ; (' "Vlrfsasm v" (c.verS))}


